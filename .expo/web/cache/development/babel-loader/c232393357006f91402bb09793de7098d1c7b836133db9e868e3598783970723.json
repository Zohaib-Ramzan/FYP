{"ast":null,"code":"import React from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport '@tensorflow/tfjs-react-native';\nimport Predictions from \"./Components/Predictions\";\nimport ObjectDetection from \"./Components/ObjectDetection\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar _Dimensions$get = Dimensions.get('window'),\n  screenHeight = _Dimensions$get.height;\nconsole.log(screenHeight);\nvar isIphoneXOrNewer = Platform.OS === 'ios' && screenHeight > 812;\nvar App = function App() {\n  return _jsxs(NavigationContainer, {\n    children: [_jsx(StatusBar, {\n      backgroundColor: \"#6200EE\",\n      barStyle: \"dark-content\"\n    }), _jsx(Tab.Navigator, {\n      screenOptions: {\n        tabBarActiveTintColor: '#3F72AF',\n        tabBarInactiveTintColor: 'grey',\n        tabBarLabelStyle: {\n          fontSize: 12\n        },\n        tabBarStyle: styles.tabBar\n      },\n      children: _jsx(Tab.Screen, {\n        name: \"Image Prediction\",\n        component: Predictions,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n              size = _ref.size;\n            return _jsx(Ionicons, {\n              name: \"ios-images\",\n              color: color,\n              size: size\n            });\n          }\n        }\n      })\n    })]\n  });\n};\nstyles = StyleSheet.create({\n  tabBar: {\n    backgroundColor: 'white',\n    paddingVertical: 1,\n    height: isIphoneXOrNewer ? 80 : 50,\n    borderTopColor: '#3F72AF'\n  }\n});\nexport default App;","map":{"version":3,"names":["React","StatusBar","StyleSheet","Platform","Dimensions","Predictions","ObjectDetection","NavigationContainer","createBottomTabNavigator","Ionicons","jsx","_jsx","jsxs","_jsxs","Tab","_Dimensions$get","get","screenHeight","height","console","log","isIphoneXOrNewer","OS","App","children","backgroundColor","barStyle","Navigator","screenOptions","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarLabelStyle","fontSize","tabBarStyle","styles","tabBar","Screen","name","component","options","tabBarIcon","_ref","color","size","create","paddingVertical","borderTopColor"],"sources":["D:/TensorflowReactNative/App.js"],"sourcesContent":["import React from 'react';\r\nimport { StatusBar, StyleSheet } from 'react-native';\r\nimport { Platform, Dimensions } from 'react-native';\r\nimport '@tensorflow/tfjs-react-native';\r\nimport Predictions from './Components/Predictions';\r\nimport ObjectDetection from './Components/ObjectDetection';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst { height: screenHeight } = Dimensions.get('window');\r\nconsole.log(screenHeight);\r\n\r\nconst isIphoneXOrNewer =\r\n  Platform.OS === 'ios' && (screenHeight > 812);\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <StatusBar backgroundColor=\"#6200EE\" barStyle=\"dark-content\" />\r\n      <Tab.Navigator\r\n        screenOptions={{\r\n          tabBarActiveTintColor: '#3F72AF',\r\n          tabBarInactiveTintColor: 'grey',\r\n          tabBarLabelStyle: {\r\n            fontSize: 12,\r\n          },\r\n          tabBarStyle: styles.tabBar,\r\n        }}\r\n      >\r\n        <Tab.Screen\r\n          name=\"Image Prediction\"\r\n          component={Predictions}\r\n          options={{\r\n            tabBarIcon: ({ color, size }) => (\r\n              <Ionicons name=\"ios-images\" color={color} size={size} />\r\n            ),\r\n          }}\r\n        />\r\n        {/* <Tab.Screen\r\n          name=\"Object Detection\"\r\n          component={ObjectDetection}\r\n          options={{\r\n            tabBarIcon: ({ color, size }) => (\r\n              <Ionicons name=\"ios-search\" color={color} size={size} />\r\n            ),\r\n          }}\r\n        /> */}\r\n      </Tab.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nstyles = StyleSheet.create({\r\n\r\n  tabBar: {\r\n    backgroundColor: 'white',\r\n    paddingVertical: 1,\r\n    height: isIphoneXOrNewer ? 80 : 50, \r\n    borderTopColor: '#3F72AF',\r\n  },\r\n});\r\n\r\nexport default App;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAG1B,OAAO,+BAA+B;AACtC,OAAOC,WAAW;AAClB,OAAOC,eAAe;AACtB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,QAAQ,QAAQ,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAE9C,IAAMC,GAAG,GAAGN,wBAAwB,CAAC,CAAC;AAEtC,IAAAO,eAAA,GAAiCX,UAAU,CAACY,GAAG,CAAC,QAAQ,CAAC;EAAzCC,YAAY,GAAAF,eAAA,CAApBG,MAAM;AACdC,OAAO,CAACC,GAAG,CAACH,YAAY,CAAC;AAEzB,IAAMI,gBAAgB,GACpBlB,QAAQ,CAACmB,EAAE,KAAK,KAAK,IAAKL,YAAY,GAAG,GAAI;AAE/C,IAAMM,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAEhB,OACEV,KAAA,CAACN,mBAAmB;IAAAiB,QAAA,GAClBb,IAAA,CAACV,SAAS;MAACwB,eAAe,EAAC,SAAS;MAACC,QAAQ,EAAC;IAAc,CAAE,CAAC,EAC/Df,IAAA,CAACG,GAAG,CAACa,SAAS;MACZC,aAAa,EAAE;QACbC,qBAAqB,EAAE,SAAS;QAChCC,uBAAuB,EAAE,MAAM;QAC/BC,gBAAgB,EAAE;UAChBC,QAAQ,EAAE;QACZ,CAAC;QACDC,WAAW,EAAEC,MAAM,CAACC;MACtB,CAAE;MAAAX,QAAA,EAEFb,IAAA,CAACG,GAAG,CAACsB,MAAM;QACTC,IAAI,EAAC,kBAAkB;QACvBC,SAAS,EAAEjC,WAAY;QACvBkC,OAAO,EAAE;UACPC,UAAU,EAAE,SAAAA,WAAAC,IAAA;YAAA,IAAGC,KAAK,GAAAD,IAAA,CAALC,KAAK;cAAEC,IAAI,GAAAF,IAAA,CAAJE,IAAI;YAAA,OACxBhC,IAAA,CAACF,QAAQ;cAAC4B,IAAI,EAAC,YAAY;cAACK,KAAK,EAAEA,KAAM;cAACC,IAAI,EAAEA;YAAK,CAAE,CAAC;UAAA;QAE5D;MAAE,CACH;IAAC,CAUW,CAAC;EAAA,CACG,CAAC;AAE1B,CAAC;AAEDT,MAAM,GAAGhC,UAAU,CAAC0C,MAAM,CAAC;EAEzBT,MAAM,EAAE;IACNV,eAAe,EAAE,OAAO;IACxBoB,eAAe,EAAE,CAAC;IAClB3B,MAAM,EAAEG,gBAAgB,GAAG,EAAE,GAAG,EAAE;IAClCyB,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAevB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}